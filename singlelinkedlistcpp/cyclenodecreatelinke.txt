#include <iostream>

using namespace std;
class node
{
    public:
    int data;
    node*next;
    
    node(int val)
    {
        data=val;
        next=NULL;
    }
};



void add(node*&head,int val)
{
    
    node*n=new node(val);
    if(head==NULL)
    {
        head=n;
        return;
    }
    node*temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=n;
    
    
    return;
}


void display(node*&head)
{
    node*temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"->";
        
        temp=temp->next;
    }
    cout<<"NULL";
}


void make(node*&head,int pos)
{
    
    node*temp=head;
    node*start;
    int count=1;
    
    while(temp->next!=NULL)
    {
        
        if(count==pos)
        {
            start=temp;
        }
        
        temp=temp->next;
        
        count++;
    }
    
    temp->next=start;
}

bool detect(node*&head)
{
    
    node*slow=head;
    node*fast=head;
    while(fast!=NULL &&fast->next!=NULL)
    {
        slow=slow->next;
        fast=fast->next->next;
        if(fast==slow)
    {
        return true;
    }
    }
    
    return false;
}

int main()
{
    node*head=NULL;
    add(head,10);
    add(head,20);
    add(head,30);
    add(head,40);
    add(head,50);
    display(head);
    make(head,3);
    cout<<"\n";
    //display(head);
    cout<<detect(head);
    
}