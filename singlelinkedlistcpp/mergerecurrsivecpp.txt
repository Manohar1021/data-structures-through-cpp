#include <iostream>

using namespace std;
class node
{
    public:
    int data;
    node*next;
    
    
    node(int val)
    {
        data=val;
        next=NULL;
    }
};


void addattail(node*&head,int val)
{
    node*n=new node(val);
    if(head==NULL)
    {
        n->next=head;
        head=n;
        return;
        
    }
    node*temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=n;
    return ;
    
}
void addathead(node*&head,int val)
{
    
    
    node*n=new node(val);
    n->next=head;
   
    head=n;
    return;
}
void display(node*head)
{
    node*temp=head;
    while(temp!=NULL)
    {
        
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL";
    return ;
}


node*merge(node*&head,node*&head1)
{
    node*result=NULL;
    if(head==NULL)
    {
        return (head1);
    }
    
     if(head1==NULL)
    {
        return head;
    }
    
    if(head->data<head1->data)
    {
        result=head;
        result->next=merge(head->next,head1);
        
    }
    else
    {
        result=head1;
        result->next=merge(head,head1->next);
    }
    return (result);
}

int main()
{
   node*head=NULL;
    
    addattail(head,1);
    addattail(head,4);
    addattail(head,7);
    
    display(head);
    cout<<"\n";
    
    node*head1=NULL;
    
    
   
    addattail(head1,2);
    addattail(head1,3);
    addattail(head1,6);
    display(head1);
    cout<<"\n";
    node*result=NULL;
    
    result=merge(head,head1);
    display(result);
    
    
    
    
    
   
}