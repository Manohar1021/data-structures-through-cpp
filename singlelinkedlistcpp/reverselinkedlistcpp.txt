#include <iostream>

using namespace std;
class node
{
    public:
    int data;
    node*next;
    
    
    node(int val)
    {
        data=val;
        next=NULL;
    }
};


void addattail(node*&head,int val)
{
    node*n=new node(val);
    if(head==NULL)
    {
        head=n;
        return;
    }
    node*temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=n;
}
void display(node*&head)
{
    node*temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"->";
        temp=temp->next;
    }
    cout<<"NULL"<<"\n";
}

node*reverse(node*&head)
{
    node*preptr=NULL;
    node*curptr=head;
    node*nxtptr;
    while(curptr!=NULL)
    {
        nxtptr=curptr->next;
        curptr->next=preptr;
        preptr=curptr;
        curptr=nxtptr;
    }
    return preptr;
}

node*reverseRecursion(node*&head)
{
    if(head==NULL || head->next==NULL)
    {
        return head;
    }
    node*newhead=reverseRecursion(head->next);
    head->next->next=head;
    head->next=NULL;
    
    return newhead;
}
int main()
{
    node*head=NULL;
    addattail(head,10);
    addattail(head,20);
    addattail(head,30);
    display(head);
    node*newhead=reverse(head);
    cout<<"\n";
    display(newhead);
}