#include <iostream>

using namespace std;
class node
{
    public:
    int data;
    node*next;
    
    node(int val)
    {
        data=val;
        next=NULL;
    }
};



void add(node*&head,int val)
{
    
    node*n=new node(val);
    if(head==NULL)
    {
        head=n;
        return;
    }
    node*temp=head;
    while(temp->next!=NULL)
    {
        temp=temp->next;
    }
    temp->next=n;
    
    
    return;
}


void display(node*&head)
{
    node*temp=head;
    while(temp!=NULL)
    {
        cout<<temp->data<<"->";
        
        temp=temp->next;
    }
    cout<<"NULL";
}

node*reversek(node*&head,int k)
{
    
     if(head==NULL||head->next==NULL)
    {
        return head;
    }
    
    
    node*preptr=NULL;
    node*curptr=head;
    node*nxtptr=NULL;
   
    
    
    int count=0;
    while(curptr!=NULL&&count<k)
    {
        
        nxtptr=curptr->next;
        curptr->next=preptr;
        preptr=curptr;
        curptr=nxtptr;
        count++;
    }
    
    if(nxtptr!=NULL)
    {
        head->next=reversek(nxtptr,k);
        
        
    }
    
    return preptr;
}

int main()
{
    node*head=NULL;
    add(head,10);
    add(head,20);
    add(head,30);
    add(head,40);
    add(head,50);
    display(head);
    cout<<"\n";
    int k=2;
    
    node*newhead=reversek(head,k);
    display(newhead);
}